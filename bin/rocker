#!/usr/bin/env ruby

require "commander/import"

program :version, '1.0.0'
program :description, 'Ruby layer over docker build with niceties'
default_command :build
always_trace!

command "build" do |c|
  c.name = "rocker build"
  c.syntax = "rocker build [options]"
  c.description = "Build a Rockerfile"
  c.option "-f",
           "--file STRING",
           String,
           "File to build. Default: Rockerfile"
  c.option "-t",
           "--tag STRING",
           String,
           "Pass through to docker build. Default: <inferred>"
  c.option "--no-tag",
           "Do not tag the docker image. Default: false"

  c.when_called do |args, opts|

    opts.default file: "Rockerfile",
                 tag: nil,
                 no_tag: false

    if opts.no_tag
      tag = ""
    elsif opts.tag
      tag = "-t #{opts.tag}"
    else
      full_tag = "%s/%s" % [ENV["USER"], File.basename(Dir.pwd)]
      full_tag += ":#{$1}" if opts.file =~ /^Rockerfile\-(.+)$/
      tag = "-t #{full_tag}"
    end

    puts Rockerfile::Engine.new(opts.file).render
    # begin
    #   temp_file = "Rockerfile-#{SecureRandom.hex(4)}"
    #   File.open(temp_file, "w") do |f|
    #     f.write Template.new.render(opts.file)
    #   end
    #   puts "docker build -f #{temp_file} #{tag} ."
    #   system("docker build -f #{temp_file} #{tag} .")
    # ensure
    #   FileUtils.rm_f(temp_file)
    # end
  end
